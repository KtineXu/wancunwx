<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chemguan.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.chemguan.po.Product" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="productName" property="productname" jdbcType="VARCHAR" />
    <result column="imageURL" property="imageurl" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="addDate" property="adddate" jdbcType="TIMESTAMP" />
    <result column="typeId" property="typeid" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.chemguan.po.Product" extends="BaseResultMap" >
    <result column="detail" property="detail" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, productName, imageURL, price, addDate, typeId, description
  </sql>
  <sql id="Blob_Column_List" >
    detail
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.chemguan.po.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chemguan.po.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chemguan.po.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chemguan.po.Product" >
    insert into product (id, productName, imageURL, 
      price, addDate, typeId, 
      description, detail)
    values (#{id,jdbcType=INTEGER}, #{productname,jdbcType=VARCHAR}, #{imageurl,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{adddate,jdbcType=TIMESTAMP}, #{typeid,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{detail,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chemguan.po.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productname != null" >
        productName,
      </if>
      <if test="imageurl != null" >
        imageURL,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="adddate != null" >
        addDate,
      </if>
      <if test="typeid != null" >
        typeId,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="detail != null" >
        detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productname != null" >
        #{productname,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null" >
        #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="adddate != null" >
        #{adddate,jdbcType=TIMESTAMP},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chemguan.po.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.productname != null" >
        productName = #{record.productname,jdbcType=VARCHAR},
      </if>
      <if test="record.imageurl != null" >
        imageURL = #{record.imageurl,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.adddate != null" >
        addDate = #{record.adddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.typeid != null" >
        typeId = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null" >
        detail = #{record.detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update product
    set id = #{record.id,jdbcType=INTEGER},
      productName = #{record.productname,jdbcType=VARCHAR},
      imageURL = #{record.imageurl,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      addDate = #{record.adddate,jdbcType=TIMESTAMP},
      typeId = #{record.typeid,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      detail = #{record.detail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set id = #{record.id,jdbcType=INTEGER},
      productName = #{record.productname,jdbcType=VARCHAR},
      imageURL = #{record.imageurl,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      addDate = #{record.adddate,jdbcType=TIMESTAMP},
      typeId = #{record.typeid,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chemguan.po.Product" >
    update product
    <set >
      <if test="productname != null" >
        productName = #{productname,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null" >
        imageURL = #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="adddate != null" >
        addDate = #{adddate,jdbcType=TIMESTAMP},
      </if>
      <if test="typeid != null" >
        typeId = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.chemguan.po.Product" >
    update product
    set productName = #{productname,jdbcType=VARCHAR},
      imageURL = #{imageurl,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      addDate = #{adddate,jdbcType=TIMESTAMP},
      typeId = #{typeid,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chemguan.po.Product" >
    update product
    set productName = #{productname,jdbcType=VARCHAR},
      imageURL = #{imageurl,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      addDate = #{adddate,jdbcType=TIMESTAMP},
      typeId = #{typeid,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 查询所有的产品方法 -->
  <select id="findAllProduct" resultType = "com.chemguan.po.Product">
  	select * from product
  </select>
  
  <!-- 根据PageBean 分页查寻 -->
  <select id="findByPageBean" parameterType="java.util.Map" resultType="com.chemguan.po.Product">
  	select * from product
  	<if test="start != null">
  		limit #{start},4
  	</if>
  </select>
  
  
  <!-- 新增一个产品的方法 -->
 <insert id="insertProduct"  parameterType="com.chemguan.po.Product">
 	insert into product 
 	(adddate,description,detail,imageurl,price,productname,typeid)
 	 values
 	 (#{adddate},#{description},#{detail},#{imageurl},#{price},#{productname},#{typeid})
 </insert>
  
  <!-- 根据产品的id查询一个产品的方法 -->
<select id="findProductById" parameterType="java.lang.Integer" resultType="com.chemguan.po.Product">
    select * from product where id=#{id}
</select>  
  
  <!-- 修改产品信息 -->
  <update id="updateProduct" parameterType="com.chemguan.po.Product">
  	update product set 
  	adddate = #{adddate},
  	description = #{description},
  	detail = #{detail},
  	imageurl = #{imageurl},
  	price = #{price},
  	productname=#{productname},
  	typeid = #{typeid}
  	where 
  	id = #{id}
  </update>
  
  <!-- 根据id删除产品 -->
  <delete id="deleteProduct" parameterType="com.chemguan.po.Product">
	delete from product where id = #{id}  
  </delete>
  
  
  <!-- 根据typeid查询产品的集合 -->
  <select id="findProductByTypeId" parameterType="java.lang.Integer" resultType="com.chemguan.po.Product">
  	select * from product where typeid = #{typeid} limit 0,4
  </select>
  
  <!-- 前台功能：查询产品 -->
  <select id="findProductByPageBean" parameterType="java.util.Map" resultType="com.chemguan.po.Product">
  	select * from product 
  	<if test="typeid != null ">
  		where typeid = #{typeid}
  	</if>
  	<if test="start != null">
  		limit #{start},4
  	</if>
  </select>
  
  
  
  
  
  
  
  
  
  
</mapper>